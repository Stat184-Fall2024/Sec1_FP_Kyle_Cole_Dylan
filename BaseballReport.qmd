---
title: "Baseball Report"
author: "Kyle Gilbert, Cole Kvasnak, Dylan _"
highlight-style: github
format:
  html:
    code-fold: true
  pdf:
    geometry: 
      - top=30mm
      - left=30mm
editor: visual
---

```{r}
#| label: load-pkgs
#| code-summary: "Packages"
#| message: false
#| echo: false

library(tidyverse)
library(knitr)
library(ggplot2)
```

```{r}
#| label: load-datasets
#| echo: false

# Set working directory to path to repo
#setwd("~/path/to/repo")

# Read in data
master_raw <- read.csv("data/Master.csv")
salaries_raw <- read.csv("data/Salaries.csv")
batting_raw <- read.csv("data/Batting.csv")
pitching_raw <- read.csv("data/Pitching.csv")
fielding_raw <- read.csv("data/Fielding.csv")
teams_raw <- read.csv("data/Teams.csv")
```

```{r}
#| label: data-wrangling
#| echo: false

### Computing wins above replacement (WAR)

## Position players

# Using Baseball Reference's definition of WAR (aka bWAR):
# https://www.baseball-reference.com/about/war_explained.shtml
# https://www.baseball-reference.com/about/war_explained_position.shtml
# https://www.baseball-reference.com/about/war_explained_pitch.shtml

# Constant for average number of runs per win, Baseball Reference assumes this is 10 
AVG_RUNS_PER_WIN = 10

# Filter teams table to 21st century
teams <- teams_raw %>%
  filter(yearID > 1999)

# Select park factors
teams_bpf <- teams %>%
  select(yearID, teamID, BPF) # Batting park factor

teams_ppf <- teams %>%
  select(yearID, teamID, PPF) # Pitching park factor

# Join park factors to batting and pitching tables by year and team
batting_with_bpf <- left_join(batting_raw, teams_bpf, by = c("yearID" = "yearID",
                                            "teamID" = "teamID"))
pitching_with_ppf <- left_join(pitching_raw, teams_ppf, by = c("yearID" = "yearID",
                                            "teamID" = "teamID"))

# Compute the league average runs per at bat
avg_runs_per_ab <- mean(teams$R / teams$AB)
# Replacement level is defined as scoring 80% of the league average runs per at bat
replacement_level_runs_per_ab = avg_runs_per_ab * 0.8

# Compute bWAR for 21st century Yankees hitters
nyy_batting <- batting_with_bpf %>%
  # Filter cases to 21st century Yankees players
  filter(yearID > 1999 & teamID == "NYA") %>%
  # Add columns for the WAR computation
  mutate(
    TB = H + X2B + 2 * X3B + 3 * HR, # total bases (TB)
    RC = ifelse((AB + BB) > 0, (H + BB) * TB / (AB + BB), 0), # runs created (RC)
    replacement_level_runs = replacement_level_runs_per_ab * AB, # replacement runs
    runs_above_replacement = RC - replacement_level_runs, # runs above replacement
    WAR = runs_above_replacement / AVG_RUNS_PER_WIN # bWAR
  ) %>%
  # Sort by descending WAR
  arrange(desc(WAR))


## Pitchers

# Compute league average runs allowed per 9 innings
lg_RA9 = (sum(teams$RA) / sum(teams$IPouts / 3)) * 9
# Replacement level is defined as allowing 20% more runs per 9 innings than the league average
replacement_RA9 = lg_RA9 * 1.2

# Compute bWAR for 21st century Yankees pitchers
nyy_pitching <- pitching_with_ppf %>%
  # Filter cases to 21st century Yankees players
  filter(yearID > 1999 & teamID == "NYA") %>%
  # Add columns for the WAR computation
  mutate(
    RA9 = (R / (IPouts / 3)) * 9, # runs allowed per 9 innings
    RA9_adj = RA9 * (PPF / 100), # runs allowed per 9 innings, adjusted for home ballpark
    WAR = (replacement_RA9 - RA9_adj) * ((IPouts / 3) / 9) / AVG_RUNS_PER_WIN, # bWAR
  ) %>%
  # Sort by descending WAR
  arrange(desc(WAR))

# Note: computed pitching bWAR does not take into account the "leverage" factor which scales the WAR based on if the pitcher is a starter or reliever. Thus, searches of the pitching WAR yields slightly different results.

### Computing other common statistics

## Position players

# Compute league on base percentage (OBP)
lg_obp = (sum(teams$H) + sum(teams$BB) + sum(teams$HBP)) / (sum(teams$AB) + sum(teams$BB) + sum(teams$HBP) + sum(teams$SF))
# Compute league slugging percentage (SLG)
lg_slg = ((sum(teams$H) - (sum(teams$X2B) + sum(teams$X3B) + sum(teams$HR))) + (2 * sum(teams$X2B)) + (3 * sum(teams$X3B)) + (4 * sum(teams$HR))) / sum(teams$AB)
# Compute league on base plus slugging (OPS)
lg_ops = lg_obp + lg_slg

# Computing other statistics and add to batting dataframe
nyy_batting <- nyy_batting %>%
  # Add columns for extra statistics
  mutate(
    BA = H / AB, # batting average (BA)
    OBP = (H + BB + HBP) / (AB + BB + HBP + SF), # on base percentage (OBP)
    SLG = ((H - (X2B + X3B + HR)) + (2 * X2B) + (3 * X3B) + (4 * HR)) / AB, # slugging percentage (SLG)
    OPS = OBP + SLG, # on base plus slugging (OPS)
    OPS_plus = (100 * (OPS / lg_ops) / (BPF / 100)) # on base plus slugging with respect to the league (OPS+); 100 is league average
  ) %>%
  # Round columns to 2 decimal places
  mutate(
    WAR = round(WAR, 2),
    BA = round(BA, 2),
    OBP = round(OBP, 2),
    SLG = round(SLG, 2),
    OPS = round(OPS, 2),
    OPS_plus = round(OPS_plus, 2),
  ) %>%
  # Select columns for final batting dataframe
  select(playerID, yearID, teamID, WAR, BA, OBP, SLG, OPS, OPS_plus)

## Pitchers

# Computing other statistics and add to pitching dataframe
nyy_pitching <- nyy_pitching %>%
  # Add columns for extra statistics
  mutate(
    WHIP = (BB + H) / (IPouts / 3), # walks and hits per inning pitched (WHIP)
    K_per_9 = (SO * 9) / (IPouts / 3), # strikeouts per 9 innings (K9)
    BB_per_9 = (BB * 9) / (IPouts / 3) # walks per 9 innings (BB9)
  ) %>%
  # Round columns to 2 decimal places
  mutate(
    WAR = round(WAR, 2),
    WHIP = round(WHIP, 2),
    K_per_9 = round(K_per_9, 2),
    BB_per_9 = round(BB_per_9, 2),
  ) %>%
  # Select columns for final pitching dataframe
  select(playerID, yearID, teamID, WAR, ERA, WHIP, K_per_9, BB_per_9)


### Joining tables to create the main dataframes

## Add salary column

# Clean the salaries dataframe
salaries <- salaries_raw %>%
  # Drop unneccessary columns
  select(-lgID)

# Add salary column to batting dataframe
nyy_batting <- inner_join(nyy_batting, salaries, by = c("yearID" = "yearID",
                                                        "teamID" = "teamID",
                                                        "playerID" = "playerID"))
# Add salary column to pitching dataframe
nyy_pitching <- inner_join(nyy_pitching, salaries, by = c("yearID" = "yearID",
                                                        "teamID" = "teamID",
                                                        "playerID" = "playerID"))

## Add position column

# Clean the fielding dataframe
fielding <- fielding_raw %>%
  # Drop unneccessary columns
  select(yearID, teamID, playerID, POS, G) %>%
  # Group by IDs as these are the cases
  group_by(yearID, teamID, playerID) %>%
  # Filter out rows so each case only has one fielding position
  filter(G == max(G)) %>%
  slice(1) %>%
  ungroup() %>%
  # Drop column used to filter
  select(-G)

# Add position column to batting dataframe
nyy_batting <- inner_join(nyy_batting, fielding, by = c("yearID" = "yearID",
                                                        "teamID" = "teamID",
                                                        "playerID" = "playerID"))
# Add position column to pitching dataframe
nyy_pitching <- inner_join(nyy_pitching, fielding, by = c("yearID" = "yearID",
                                                        "teamID" = "teamID",
                                                        "playerID" = "playerID"))

# Drop all rows where players are not pitchers from pitching dataframe
nyy_pitching <- nyy_pitching %>%
  filter(POS == "P")
```

**Project Description:**

The goal of this final R project is to analyze the percentage of a team's salary cap allocated to specific players from 2000 to now and to explore the factors driving these players' compensation levels.

**Questions to answer:**

-   **Player Salary Insights**

    -   How does the percentage of salary cap each player earns correlate with their performance metrics (e.g., batting average, home runs, WAR)?

    -   What is the distribution of salaries across different positions (pitcher, catcher, etc.) for the Yankees compared to other teams?

-   **Team-Level Analysis**

    -   How does the Yankees' average player salary compare to that of other MLB teams?

    -   What percentage of the Yankees' salary cap is spent on top-performing players compared to the league average?

-   **Historical Trends**

    -   How has the percentage of the salary cap allocated to top-paid players changed over the years for the Yankees and other teams?

    -   Are there trends in salary allocation related to team performance in playoffs or championships?

-   **Position-Based Analysis**

    -   Are certain positions (e.g., pitchers, shortstops) allocated a higher percentage of the salary cap across MLB teams? How does this compare with the Yankees?

    -   Do players in specific positions receive more or less than their performance justifies?

-   **Team Strategy Insights**

    -   Does a higher percentage of salary cap spent on star players correlate with better overall team performance?

    -   How do the Yankees' salary allocation strategies compare to teams with similar or better performance records?

-   **League-Wide Comparisons**

    -   How do the Yankees rank in terms of salary cap utilization efficiency compared to other MLB teams?

    -   Are there any anomalies or outliers in salary allocations across the league?

-   **Contract Lengths and Salaries**

    -   Do longer contracts for Yankees players correlate with a higher percentage of the salary cap allocation?

    -   How does contract length influence the perceived value of players?

-   **Demographics and Salaries**

    -   Are there correlations between player age, experience, or nationality and the percentage of the salary cap they receive?

    -   How do rookie salaries as a percentage of salary caps compare between the Yankees and other teams?

-   **Revenue vs. Salaries**

    -   Does the Yankees' revenue have a stronger correlation with salary cap allocations compared to other teams?

    -   How does team revenue impact the overall spending strategy on players?

Note: At some point in analysis, define equations for WAR
