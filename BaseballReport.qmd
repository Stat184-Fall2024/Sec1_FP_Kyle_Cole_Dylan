---
title: "Analyzing Salary and Peformance Metrics of the New York Yankees"
subtitle: "STAT 184 Fall 2024 Final Project"
author: "Kyle Gilbert, Cole Kvasnak, Dylan Van Berkel"
date: "2024-12-18"
highlight-style: github
format:
  pdf:
    code-fold: true
    geometry: 
      - top=30mm
      - left=30mm
editor: visual
---

```{r}
#| label: load-pkgs
#| message: false
#| warning: false
#| echo: false

# This code will be using the tidyverse style guide

# Load necessary packages
library(tidyverse)
library(knitr)
library(kableExtra)
```

```{r}
#| label: load-datasets
#| message: false
#| warning: false
#| echo: false

# Set working directory to path to repo (uncomment if needed)
#setwd("~/path/to/repo")

# Read in data -------------------------------------
master_raw <- read.csv("data/Master.csv")
salaries_raw <- read.csv("data/Salaries.csv")
batting_raw <- read.csv("data/Batting.csv")
pitching_raw <- read.csv("data/Pitching.csv")
fielding_raw <- read.csv("data/Fielding.csv")
teams_raw <- read.csv("data/Teams.csv")
cpi_raw <- read.csv("data/CPI_data.csv")
```

```{r}
#| label: data-wrangling
#| message: false
#| warning: false
#| echo: false

### Computing wins above replacement (WAR) -------------------------------------

## Position players

# Using Baseball Reference's definition of WAR (bWAR):
# - https://www.baseball-reference.com/about/war_explained.shtml
# - https://www.baseball-reference.com/about/war_explained_position.shtml
# - https://www.baseball-reference.com/about/war_explained_pitch.shtml

# Constant for average number of runs per win, Baseball Reference assumes this is 10 
AVG_RUNS_PER_WIN <- 10

# Filter teams table to 21st century
teams <- teams_raw %>%
  filter(yearID > 1999)

# Select park factors
teams_bpf <- teams %>%
  select(yearID, teamID, BPF) # Batting park factor

teams_ppf <- teams %>%
  select(yearID, teamID, PPF) # Pitching park factor

# Join park factors to batting and pitching tables by year and team
batting_with_bpf <- left_join(batting_raw, teams_bpf, by = c("yearID", "teamID"))
pitching_with_ppf <- left_join(pitching_raw, teams_ppf, by = c("yearID", "teamID"))

# Compute the league average runs per at-bat
avg_runs_per_ab <- mean(teams$R / teams$AB)
# Replacement level is defined as scoring 80% of the league average runs per at-bat
replacement_level_runs_per_ab <- avg_runs_per_ab * 0.8

# Compute bWAR for 21st century Yankees hitters
nyy_batting <- batting_with_bpf %>%
  # Filter cases to 21st century Yankees players
  filter(yearID > 1999 & teamID == "NYA") %>%
  # Add columns for the WAR computation
  mutate(
    TB = H + X2B + 2 * X3B + 3 * HR, # total bases (TB)
    RC = ifelse((AB + BB) > 0, (H + BB) * TB / (AB + BB), 0), # runs created (RC)
    replacement_level_runs = replacement_level_runs_per_ab * AB, # replacement runs
    runs_above_replacement = RC - replacement_level_runs, # runs above replacement
    WAR = runs_above_replacement / AVG_RUNS_PER_WIN # bWAR
  ) %>%
  # Sort by descending WAR
  arrange(desc(WAR))


## Pitchers

# Compute league average runs allowed per 9 innings
lg_RA9 <- (sum(teams$RA) / sum(teams$IPouts / 3)) * 9
# Replacement level is defined as allowing 20% more runs per 9 innings than the league average
replacement_RA9 <- lg_RA9 * 1.2

# Compute bWAR for 21st century Yankees pitchers
nyy_pitching <- pitching_with_ppf %>%
  # Filter cases to 21st century Yankees players
  filter(yearID > 1999 & teamID == "NYA") %>%
  # Add columns for the WAR computation
  mutate(
    RA9 = (R / (IPouts / 3)) * 9, # runs allowed per 9 innings
    RA9_adj = RA9 * (PPF / 100), # runs allowed per 9 innings, adjusted for home ballpark
    WAR = (replacement_RA9 - RA9_adj) * ((IPouts / 3) / 9) / AVG_RUNS_PER_WIN, # bWAR
  ) %>%
  # Sort by descending WAR
  arrange(desc(WAR))

### Computing other common statistics -------------------------------------

## Position players

# Compute league on-base percentage (OBP)
lg_obp <- (sum(teams$H) + sum(teams$BB) + sum(teams$HBP)) / (sum(teams$AB) + sum(teams$BB) + sum(teams$HBP) + sum(teams$SF))
# Compute league slugging percentage (SLG)
lg_slg <- ((sum(teams$H) - (sum(teams$X2B) + sum(teams$X3B) + sum(teams$HR))) + (2 * sum(teams$X2B)) + (3 * sum(teams$X3B)) + (4 * sum(teams$HR))) / sum(teams$AB)
# Compute league on-base plus slugging (OPS)
lg_ops <- lg_obp + lg_slg

# Add statistics to batting dataframe
nyy_batting <- nyy_batting %>%
  mutate(
    BA = H / AB, # batting average (BA)
    OBP = (H + BB + HBP) / (AB + BB + HBP + SF), # on-base percentage (OBP)
    SLG = ((H - (X2B + X3B + HR)) + (2 * X2B) + (3 * X3B) + (4 * HR)) / AB, # slugging percentage (SLG)
    OPS = OBP + SLG, # on-base plus slugging (OPS)
    OPS_plus = (100 * (OPS / lg_ops) / (BPF / 100)) # OPS+ adjusted for league
  ) %>%
  # Round columns to 3 decimal places
  mutate(
    WAR = round(WAR, 3),
    BA = round(BA, 3),
    OBP = round(OBP, 3),
    SLG = round(SLG, 3),
    OPS = round(OPS, 3),
    OPS_plus = round(OPS_plus, 3)
  ) %>%
  select(playerID, yearID, teamID, WAR, BA, OBP, SLG, OPS, OPS_plus)

## Pitchers

# Add extra statistics to pitching dataframe
nyy_pitching <- nyy_pitching %>%
  mutate(
    WHIP = (BB + H) / (IPouts / 3), # walks and hits per inning pitched (WHIP)
    K_per_9 = (SO * 9) / (IPouts / 3), # strikeouts per 9 innings (K9)
    BB_per_9 = (BB * 9) / (IPouts / 3) # walks per 9 innings (BB9)
  ) %>%
  # Round columns to 3 decimal places
  mutate(
    WAR = round(WAR, 3),
    WHIP = round(WHIP, 3),
    K_per_9 = round(K_per_9, 3),
    BB_per_9 = round(BB_per_9, 3)
  ) %>%
  select(playerID, yearID, teamID, WAR, ERA, WHIP, K_per_9, BB_per_9)


### Joining tables to create the main dataframes -------------------------------------

## Add salary column

# Adjust salaries for inflation using CPI
cpi_data <- cpi_raw %>%
  mutate(
    cpi = (Jan + Feb + Mar + Apr + May + Jun + Jul + Aug + Sep + Oct + Nov + Dec) / 12
  ) %>%
  select(Year, cpi)

# Base CPI is for the year 2015
base_cpi <- cpi_data$cpi[cpi_data$Year == 2015]

# Clean and adjust salaries for inflation
salaries <- salaries_raw %>%
  filter(yearID > 1999 & teamID == "NYA") %>%
  left_join(cpi_data, by = c("yearID" = "Year")) %>%
  mutate(
    salary_adj = round(salary * (base_cpi / cpi))
  ) %>%
  select(-lgID, -cpi)

# Add salary and adjusted salary columns to batting and pitching dataframes
nyy_batting <- inner_join(nyy_batting, salaries, by = c("yearID", "teamID", "playerID"))
nyy_pitching <- inner_join(nyy_pitching, salaries, by = c("yearID", "teamID", "playerID"))

## Add position column

# Clean the fielding dataframe
fielding <- fielding_raw %>%
  select(yearID, teamID, playerID, POS, G) %>%
  group_by(yearID, teamID, playerID) %>%
  filter(G == max(G)) %>%
  slice(1) %>%
  ungroup() %>%
  select(-G) %>%
  filter(yearID > 1999 & teamID == "NYA")

# Add position column to batting and pitching dataframes
nyy_batting <- inner_join(nyy_batting, fielding, by = c("yearID", "teamID", "playerID"))
nyy_pitching <- inner_join(nyy_pitching, fielding, by = c("yearID", "teamID", "playerID"))

# Filter out non-pitchers from the pitching dataframe
nyy_pitching <- nyy_pitching %>%
  filter(POS == "P")

## Add name column

# Clean the master dataset
master <- master_raw %>%
  mutate(name = paste(nameFirst, nameLast, sep = " ")) %>%
  select(playerID, name)

# Add name column to batting and pitching dataframes
nyy_batting <- inner_join(nyy_batting, master, by = "playerID")
nyy_pitching <- inner_join(nyy_pitching, master, by = c("playerID" = "playerID"))

# Filter out pitchers from batting dataframe
nyy_batting <- nyy_batting %>%
  filter(POS != "P") %>%
  select(yearID, teamID, playerID, name, POS, WAR, BA, OBP, SLG, OPS, OPS_plus, salary, salary_adj)

nyy_pitching <- nyy_pitching %>%
  select(yearID, teamID, playerID, name, POS, WAR, ERA, WHIP, K_per_9, BB_per_9, salary, salary_adj)

# Create a team dataframe for easier data aggregation across the team for data analysis
nyy_team <- full_join(nyy_batting, nyy_pitching, by = c("yearID", "teamID", "playerID", "name", "POS", "WAR", "salary", "salary_adj"))
```

```{r}
#| label: data-visualizations
#| message: false
#| warning: false
#| echo: false

## Individual salaries vs individual performance -------------------------------------

# Density plot of adjusted salary
plot1 <- nyy_team %>%
  ggplot(aes(x = salary_adj / 1e6)) + 
  geom_density(fill = "lightblue", alpha = 0.5) +
  labs(title = expression(bold("Distribution of Adjusted Annual Salaries")), 
       x = expression(bold("Adjusted Annual Salary (in Millions $USD)")), 
       y = expression(bold("Density"))) +
  scale_x_continuous(
    breaks = c(0, 5, 10, 15, 20, 25, 30),
    labels = c("$0M", "$5M", "$10M", "$15M", "$20M", "$25M", "$30M")
  ) +
  theme_linedraw()

## Analyze correlation between salary and batting statistics ---------------------------------

# Salary_adj plotted on log scale

# WAR vs Adjusted Salary
plot2 <- nyy_batting %>%
  ggplot(aes(x = log10(salary_adj / 1e6), y = WAR)) + 
  geom_point(color = "steelblue") + 
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "solid") +
  labs(title = expression(bold("WAR vs Adjusted Annual Salary")),
       x = expression(bold("Adjusted Annual Salary (in Millions $USD)")),
       y = expression(bold("Wins Above Replacement (WAR)"))) +
  scale_x_continuous(
    breaks = c(-0.5, 0, 0.5, 1, 1.5),
    labels = c("$316k", "$1M", "$3.16M", "$10M", "$31.6M")
  ) +
  theme_linedraw()

# BA vs Adjusted Salary
plot3 <- nyy_batting %>%
  ggplot(aes(x = log10(salary_adj / 1e6), y = BA)) + 
  geom_point(color = "steelblue") + 
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "solid") +
  labs(title = expression(bold("BA vs Adjusted Annual Salary")),
       x = expression(bold("Adjusted Annual Salary (in Millions $USD)")),
       y = expression(bold("Batting Average (BA)"))) +
  scale_x_continuous(
    breaks = c(-0.5, 0, 0.5, 1, 1.5),
    labels = c("$316k", "$1M", "$3.16M", "$10M", "$31.6M")
  ) +
  scale_y_continuous(limits = c(0.1, 0.4)) +
  theme_linedraw()

# OPS+ vs Adjusted Salary
plot4 <- nyy_batting %>%
  ggplot(aes(x = log10(salary_adj / 1e6), y = OPS_plus)) + 
  geom_point(color = "steelblue") + 
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "solid") +
  labs(title = expression(bold("OPS+ vs Adjusted Annual Salary")),
       x = expression(bold("Adjusted Annual Salary (in Millions $USD)")),
       y = expression(bold("OPS+"))) +
  scale_x_continuous(
    breaks = c(-0.5, 0, 0.5, 1, 1.5),
    labels = c("$316k", "$1M", "$3.16M", "$10M", "$31.6M")
  ) +
  scale_y_continuous(limits = c(25, 175)) +
  theme_linedraw()

## Analyze correlation between salary and pitching statistics -------------------------------

# Salary_adj plotted on log scale

# WAR vs Adjusted Salary
plot5 <- nyy_pitching %>%
  ggplot(aes(x = log10(salary_adj / 1e6), y = WAR)) + 
  geom_point(color = "steelblue") + 
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "solid") +
  labs(title = expression(bold("WAR vs Adjusted Annual Salary")),
       x = expression(bold("Adjusted Annual Salary (in Millions $USD)")),
       y = expression(bold("Wins Above Replacement (WAR)"))) +
  scale_x_continuous(
    breaks = c(-0.5, 0, 0.5, 1, 1.5),
    labels = c("$316k", "$1M", "$3.16M", "$10M", "$31.6M")
  ) +
  theme_linedraw()

# ERA vs Adjusted Salary
plot6 <- nyy_pitching %>%
  ggplot(aes(x = log10(salary_adj / 1e6), y = ERA)) + 
  geom_point(color = "steelblue") + 
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "solid") +
  labs(title = expression(bold("ERA vs Adjusted Annual Salary")),
       x = expression(bold("Adjusted Annual Salary (in Millions $USD)")),
       y = expression(bold("Earned Runs Average (ERA)"))) +
  scale_x_continuous(
    breaks = c(-0.5, 0, 0.5, 1, 1.5),
    labels = c("$316k", "$1M", "$3.16M", "$10M", "$31.6M")
  ) +
  scale_y_continuous(limits = c(0, 12)) +
  theme_linedraw()

# WHIP vs Adjusted Salary
plot7 <- nyy_pitching %>%
  ggplot(aes(x = log10(salary_adj / 1e6), y = WHIP)) + 
  geom_point(color = "steelblue") + 
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "solid") +
  labs(title = expression(bold("Walks & Hits per Inning Pitched (WHIP) vs Adjusted Annual Salary")),
       x = expression(bold("Adjusted Annual Salary (in Millions $USD)")),
       y = expression(bold("Walks & Hits per Inning Pitched (WHIP)"))) +
  scale_x_continuous(
    breaks = c(-0.5, 0, 0.5, 1, 1.5),
    labels = c("$316k", "$1M", "$3.16M", "$10M", "$31.6M")
  ) +
  theme_linedraw()

## Analyze correlations between variables -------------------------------------

# Create correlation matrix between metrics and salaries for batters and pitchers

# Batters
nyy_batting_renamed <- nyy_batting %>%
  rename(
    "OPS+" = "OPS_plus",
    "Adjusted Salary" = "salary_adj"
  )
cor_batting_df <- nyy_batting_renamed %>%
  select(WAR, BA, `OPS+`, `Adjusted Salary`) %>%
  cor(use = "complete.obs") %>%
  as.data.frame() %>%
  mutate(Variable1 = rownames(.)) %>%
  pivot_longer(
    cols = -Variable1,
    names_to = "Variable2",
    values_to = "Correlation"
  )

# Pitchers
nyy_pitching_renamed <- nyy_pitching %>%
  rename(
    "Adjusted Salary" = "salary_adj"
  )
cor_pitching_df <- nyy_pitching_renamed %>%
  select(WAR, ERA, WHIP, `Adjusted Salary`) %>%
  cor(use = "complete.obs") %>%
  as.data.frame() %>%
  mutate(Variable1 = rownames(.)) %>%
  pivot_longer(
    cols = -Variable1,
    names_to = "Variable2",
    values_to = "Correlation"
  )

## Create heatmaps to show correlations between variables -------------------------------------

# Batters
plot8 <- cor_batting_df %>%
  ggplot(aes(x = Variable1, y = Variable2, fill = Correlation)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "white", mid = "lightblue", high = "darkblue", midpoint = 0) +
  labs(title = expression(bold("Batting Correlation Matrix")), fill = "Correlation") +
  theme_linedraw() +
  theme(axis.text.x = element_text(face = "bold"),
        axis.text.y = element_text(face = "bold"),
        axis.title.x = element_blank(),
        axis.title.y = element_blank())

# Pitchers
plot9 <- cor_pitching_df %>%
  ggplot(aes(x = Variable1, y = Variable2, fill = Correlation)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "white", mid = "lightblue", high = "darkblue", midpoint = 0) +
  labs(title = expression(bold("Pitching Correlation Matrix")), fill = "Correlation") +
  theme_linedraw() +
  theme(axis.text.x = element_text(face = "bold"),
        axis.text.y = element_text(face = "bold"),
        axis.title.x = element_blank(),
        axis.title.y = element_blank())

## Average Salary by Position -------------------------------------

# Get dataframe of salary by position
salary_by_position <- nyy_team %>%
  group_by(POS) %>%
  summarize(avg_salary = mean(salary_adj, na.rm = TRUE), .groups = "drop") %>%
  mutate(avg_salary = avg_salary / 1e6) %>%
  arrange(desc(avg_salary))

# Create a bar chart plotting the average salaries
plot10 <- salary_by_position %>%
  ggplot(aes(x = reorder(POS, -avg_salary), y = avg_salary, fill = POS)) +
  geom_bar(stat = "identity", fill = "steelblue", show.legend = FALSE) +
  labs(title = expression(bold("Average Annual Adjusted Salary by Position")),
       x = expression(bold("Position")),
       y = expression(bold("Average Annual Adjusted Salary (in Millions $USD)"))) +
  theme_linedraw() +
  theme(axis.text.x = element_text())

## Over and under performers: WAR / $ -------------------------------------

# Over performers
top_10_over_performers <- nyy_team %>%
  mutate(WAR_per_dollar = (WAR * 1e6) / salary_adj) %>%
  arrange(desc(WAR_per_dollar)) %>%
  slice_head(n = 10)

# Under performers
top_10_under_performers <- nyy_team %>%
  mutate(WAR_per_dollar = (WAR * 1e6) / salary_adj) %>%
  arrange(WAR_per_dollar) %>%
  slice_head(n = 10)

# Over performers table
top_10_over_table <- top_10_over_performers %>%
  select(yearID, name, POS, WAR, salary_adj, WAR_per_dollar) %>%
  kable(col.names = c("Year", "Player", "Position", "WAR", "Salary ($USD)", "WAR / $M"),
        caption = "Top 10 Over Performers (Lowest WAR per Million Dollars)",
        digits = c(0, 0, 0, 2, 0, 2)) %>%
  kable_styling(bootstrap_options = c("striped", "condensed", "bordered"))

# Under performers table
top_10_under_table <- top_10_under_performers %>%
  select(yearID, name, POS, WAR, salary_adj, WAR_per_dollar) %>%
  kable(col.names = c("Year", "Player", "Position", "WAR", "Salary ($USD)", "WAR / $M"),
        caption = "Top 10 Under Performers (Lowest WAR per Million Dollars)",
        digits = c(0, 0, 0, 2, 0, 2)) %>%
  kable_styling(bootstrap_options = c("striped", "condensed", "bordered"))
```

# Overview

When Michael Lewis published his 2003 book *Moneyball*, he changed the game of baseball forever, bringing the power of statistical analysis into the spotlight. Suddenly, it wasn't just about home runs or batting averages – it was about uncovering hidden value through data.

Building on this legacy, our project dives into the intersection of money and performance, analyzing how salary allocations align with player performance metrics in America's pastime. Focusing exclusively on 21st century New York Yankees players - the cornerstone of Major League Baseball's (MLB) most valuable franchise - we aim to uncover insights behind the numbers that define success for the Bronx Bombers.

Our research intends to answer the following questions:

\- What does the distribution of salaries for the New York Yankees look like?

\- Which offensive and defensive metrics correlate the most with a player's salary?

\- What is the salary breakdown across different positions? In other words, which positions get paid the most and least?

\- Which players provided the most and least value per dollar they were paid? In other words, who were the top over performers and top under performers?

## Datasets

For our analysis, we will be using the *Baseball Databank* dataset found on [Kaggle](https://www.kaggle.com/datasets/open-source-sports/baseball-databank). This dataset has been adapted from the Sean Lahman Baseball Dataset. Sean Lahman is a well-respected journalist and data analyst with a passion for baseball history.

The Sean Lahman Baseball Dataset is a collection of historical baseball data, dating back to professional baseball's inception. The *Baseball Databank* covers the years 1871 - 2015. Sean Lahman has compiled the dataset to provide baseball researchers, analysts, and fans with a comprehensive and easily accessible database for historical baseball data.

In our analysis, we will be using the following tables from the *Baseball Databank*:

\- Master: player names, DOB, biographical info. Cases are individual players.

\- Batting: batting statistics. Cases are individual players on a certain team in a given year.

\- Pitching: pitching statistics. Cases are individual players on a certain team in a given year.

\- Fielding: fielding statistics and player positions. Cases are individual players on a certain team in a given year.

\- Salaries: player salaries. Cases are individual players on a certain team in a given year.

\- Teams: team statistics and ballpark data. Cases are individual franchises in a given year.

To supplement the *Baseball Databank* dataset, we will also be using a smaller *Consumer Price Index* dataset. This dataset provides historical consumer price index (CPI) data.

The *Consumer Price Index* dataset is sourced from the Bureau of Labor Statistics. The dataset can be accessed directly from the Bureau of Labor Statistics [website](https://data.bls.gov/timeseries/CUUR0000SA0?years_option=all_years). For our specific case, we have downloaded the CPI data for the years 2000 - 2015. The Bureau of Labor Statistics provides public CPI data to ensure citizens, organizations, and policymakers have access to a reliable measure of economic conditions.

The CPI can be used to gauge inflation, which we use to adjust player salaries for inflation. The details of adjusting the players' salaries for inflation are discussed under [Methodology].

In our analysis, we will be using the following table from the *Consumer Price Index* dataset:

\- CPI: consumer price index. Cases are represented by a specific year.

FAIR and CARE Principles

## Background

Baseball statistics provide a way to quantify an individual player's or team's success by comparing them to other players and teams in the league. In this section, we will go over the statistics we have chosen to focus our analysis on, and provide the mathematical definition for each.

There are a variety of statistics used in analysis of professional baseball, ranging from as simple as $H$ and $HR$ to advanced sabermetrics like $wOBA$. Our analysis will be focusing on a few of the statistics we find most effective in quantifying a player's success, broken up into two primary categories: batting statistics and pitching statistics.

### Batting Statistics

For batting statistics, our analysis will focus on three metrics we consider to be the most indicative of a player's success at the plate: wins above replacement $WAR$ , batting average $BA$, and normalized on base plus slugging $OPS+$.

WAR is an advanced metric that essentially measures how many wins an individual player contributes to their team with respect to a replacement level player.

Our calculations are based on Baseball Reference's definitions for $WAR$ (aka $bWAR$). Metrics such as $WAR$ can be calculated differently depending on the use case.

According to Baseball Reference's definition of $bWAR$ for a position player:

$$
bWAR = \frac{RC - RC_r}{⍺}
$$

where $RC$ denotes runs created, $RC_r$ denotes replacement level runs created, and $⍺$ denotes a constant for the average number of runs per win. Baseball Reference approximates $⍺=10$ in their calculations.

$RC$ can be computed using the following formula:

$$
RC = \frac{(H + BB) \times TB}{AB + BB}
$$

where $H$ denotes hits, $BB$ denotes walks, $TB$ denotes total bases, and $AB$ denotes at bats.

$TB$ is calculated using the following formula:

$$
TB = H + 2 \times X2B + 3 \times X3B + 4 \times HR
$$

where $X2B$ denotes doubles, $X3B$ denotes triples, and $HR$ denotes home runs.

Replacement level runs created, $RC_r$ can be computed using the following formula:

$$
RC_r = 𝛃 \times RC_l
$$

where $RC_l$ denotes the league average runs created and $𝛃$ denotes a constant for what replacement level is considered to be. Baseball Reference approximates $𝛃 = 0.8$, meaning that a replacement level player produces roughly 80% of the league average runs created.

Batting average measures the proportion of at bats, $AB$, where a player will get a hit, $H$. Batting average, $BA$ can be calculated using the following formula:

$$
BA = \frac{H}{AB}
$$

On base plus slugging, $OPS$ is the sum of two other baseball statistics:

$$
OPS = OBP + SLG
$$

where $OBP$ denotes on base percentage and $SLG$ denotes slugging percentage. These metrics can be calculated using the following formulas:

$$
OBP = \frac{H + BB + HBP}{AB + BB + HBP + SF}
$$

$$
SLG = \frac{TB}{AB}
$$

where $HBP$ denotes hit by pitches and $SF$ denotes sacrifice flies.

Normalized on base plus slugging, $OPS+$, is essentially $OPS$ normalized to the league average. An $OPS+$ of $100$ denotes the league average. $OPS+$ can be computed with the following formula:

$$
OPS+ = \frac{OPS}{OPS_l} \times 100
$$

where $OPS_l$ denotes the league average $OPS$.

### Pitching Statistics

For pitching statistics, our analysis will focus on the three metrics we consider to be the most indicative of a player's success at the mound: wins above replacement (WAR), earned run average (ERA), and walks and hits per inning pitched (WHIP).

WAR is calculated differently for pitchers than it is position players. According to Baseball Reference's definition of WAR for a pitcher:

$$
bWAR = \frac{(RA9_r-RA9_a)\times\frac{IP}{9}}{⍺}
$$

where $RA9_a$ is adjusted runs allowed per 9 innings, $RA9_r$ is replacement level runs allowed per 9 innings, $IP$ is innings pitched, and $⍺$ denotes a constant for the average number of runs per win. As previously mentioned, Baseball Reference assumes $⍺=10$ for their calculations.

Note: Baseball Reference's official definition of $bWAR$ for a pitcher also includes a leverage factor in the computation. The leverage factor essentially scales a pitcher's $WAR$ differently depending on if they are primarily a relief pitcher or a starting pitcher. Due to the lack of that information in our dataset, and for overall simplicity, our computation will be leaving this factor out.

$RA9_a$ can be computed using the following formula:

$$
RA9_a = \frac{RA}{IP}\times9\times PPF
$$

where $RA$ denotes the number of runs a pitcher allows and $PPF$ denotes the player's home ballpark pitching park factor. The pitching park factor essentially weighs some ballparks differently, due to the inconsistent size of field of play among MLB ballparks.

$RA9_r$, or replacement level $RA9$, can be calculated using the following formula:

$$
RA9_r = 𝛍 \times RA9_l
$$

where $RA9_l$ is the league average $RA9$ and $𝛍$ denotes a constant for what replacement level is considered to be. Baseball reference approximates $𝛍 = 1.2$, meaning that a replacement level pitcher allows roughly 20% more runs per 9 innings than the league average.

Earned run average, $ERA$ is the average number of earned runs a pitcher will allow in 9 innings. $ERA$ can be calculated using the following formula:

$$
ERA = \frac{ER}{IP}\times9
$$

where $ER$ denotes earned runs.

Walks and hits per inning pitched, $WHIP$ is average number of walks and hits a pitcher will allow in an inning. $WHIP$ can be computed using the following formula:

$$
WHIP = \frac{BB + H}{IP}
$$

where $BB$ is total walks allowed and $H$ is total hits allowed.

For more information on baseball statistics, please refer to Baseball Reference under [references].

## Methodology

In this section, we outline the methodology used to transform raw data into feature-rich dataframes suitable for analysis. This process involved data cleaning, wrangling, and deriving new features from the datasets.

The data cleaning process started by taking our raw data tables directly from the CSV files. From these raw tables, we filtered out only the cases that we would need for our analysis: 21st century Yankees players.

Next, we needed to take the raw data, which was in the form of stats that can be recorded directly from a game ($H$, $BB$, $HR$) and transform it into statistics that are more indicative of a player's success ($WAR$, $BA$, $OPS+$). This was the majority of the data wrangling process due to the complexity of some of the formulas, as mentioned in the previous section.

The other major form of data wrangling involved adjusting player salaries for inflation. Adjusting player salaries for inflation ensures that . Since we will be comparing salaries to player performance metrics, we do not want players from later years to be unfairly evaluated, simply because of the depreciating value of the US dollar.

Player salaries were scaled using the Consumer Price Index, $CPI$, a metric used to gauge inflation, based on the following formula:

$$
S_a = S \times \frac{CPI_b}{CPI}
$$

where $S_a$ denotes the salary adjusted for inflation, $S$ denotes the raw salary, $CPI$ denotes the Consumer Price Index in the year of the salary, and $CPI_b$ denotes a constant for the baseline $CPI$. $CPI_b$ essentially is the $CPI$ for the year in which all salaries will be scaled to. For our analysis, $CPI_b$ will be set to the $CPI$ value in 2015, the most recent year of our dataset.

Throughout this process, tables were joined together using the yearIDs, teamIDs, and playerIDs.

# Data Analysis

With our data now cleaned and organized, we can move forward with the analysis. To address our research questions effectively, we have developed a series of visualizations. This section is structured around each research question, with a focused analysis for each.

## What does the distribution of salaries for the New York Yankees look like?

Section intro: explain what we would like to discover in this research question.

Density Plot of Adjusted Annual Salaries

```{r, fig.width=5, fig.height=3}
#| label: print-plot1
#| message: false
#| warning: false
#| echo: false
plot1
```

Plot explanation

## Which offensive and defensive metrics correlate the most with a player's salary?

Section intro: explain what we would like to discover in this research question.

### Offensive Metrics:

Correlation between WAR and Adjusted Annual Salary

```{r, fig.width=5, fig.height=3}
#| label: print-plot2
#| message: false
#| warning: false
#| echo: false
plot2
```

Plot explanation

Correlation between BA and Adjusted Annual Salary

```{r, fig.width=5, fig.height=3}
#| label: print-plot3
#| message: false
#| warning: false
#| echo: false
plot3
```

Plot explanation

Correlation between OPS+ and Adjusted Annual Salary

```{r, fig.width=5, fig.height=3}
#| label: print-plot4
#| message: false
#| warning: false
#| echo: false
plot4
```

Plot explanation

### Defensive Metrics:

Correlation between WAR and Adjusted Annual Salary

```{r, fig.width=5, fig.height=3}
#| label: print-plot5
#| message: false
#| warning: false
#| echo: false
plot5
```

Plot explanation

Correlation between ERA and Adjusted Annual Salary

```{r, fig.width=5, fig.height=3}
#| label: print-plot6
#| message: false
#| warning: false
#| echo: false
plot6
```

Plot explanation

Correlation between WHIP and Adjusted Annual Salary

```{r, fig.width=5, fig.height=3}
#| label: print-plot7
#| message: false
#| warning: false
#| echo: false
plot7
```

Plot explanation

### Summary/ Heatmaps

Heatmap of batting metrics

```{r, fig.width=5, fig.height=3}
#| label: print-plot8
#| message: false
#| warning: false
#| echo: false
plot8
```

Plot explanation

Heatmap of pitching metrics

```{r, fig.width=5, fig.height=3}
#| label: print-plot9
#| message: false
#| warning: false
#| echo: false
plot9
```

Plot explanation

## What is the salary breakdown across different positions? In other words, which positions get paid the most and least?

Section intro: explain what we would like to discover in this research question.

Bar chart of Average Annual Adjusted Salary grouped by Position

```{r, fig.width=5, fig.height=4}
#| label: print-plot10
#| message: false
#| warning: false
#| echo: false
plot10
```

Plot explanation

## Which players provided the most and least value per dollar they were paid? In other words, who were the top over performers and top under performers?

Section intro: explain what we would like to discover in this research question.

### Over Performers

Table of top 10 players in WAR per Million \$USD

```{r, fig.width=5, fig.height=3}
#| label: print-table1
#| message: false
#| warning: false
#| echo: false
top_10_over_table
```

Table explanation

### Under Performers

Table of top 10 players in WAR per Million \$USD

```{r, fig.width=5, fig.height=3}
#| label: print-table2
#| message: false
#| warning: false
#| echo: false
top_10_under_table
```

Table explanation

# Conclusion

Explain results/ takeaways of the analysis. Possibly make recommendations to the Yankees as a result of the data analysis

## References

Bureau of Labor Statistics. *Consumer Price Index for All Urban Consumers (CPI-U)*. U.S. Department of Labor, <https://data.bls.gov/timeseries/CUUR0000SA0?years_option=all_years>. Accessed 18 December 2024.

Lahman, Sean. *Sean Lahman Baseball Database.* Version 2023, SeanLahman.com, 2023, <http://seanlahman.com>. Accessed 18 December 2024.

Lewis, Michael. *Moneyball: The Art of Winning an Unfair Game.* W.W. Norton & Company, 2003.

Open Source Sports. *Baseball Databank*. Kaggle, 2019, <https://www.kaggle.com/datasets/open-source-sports/baseball-databank>. Accessed 18 December 2024.

"Pitcher WAR Calculations and Details." *Baseball Reference,* Sports Reference, <https://www.baseball-reference.com/about/war_explained_pitch.shtml>. Accessed 18 December 2024.

"Position Player WAR Calculations and Details." *Baseball Reference,* Sports Reference, <https://www.baseball-reference.com/about/war_explained_position.shtml>. Accessed 18 December 2024.

"WAR Explained." *Baseball Reference,* Sports Reference, <https://www.baseball-reference.com/about/war_explained.shtml>. Accessed 18 December 2024.

## Code Appendix

```{r codeAppend, ref.label=knitr::all_labels(), echo=TRUE, eval=FALSE}
```

**#Project Description:**

The goal of this final R project is to analyze the percentage of a team's salary cap allocated to specific players from 2000 to now and to explore the factors driving these players' compensation levels.

**Questions to answer:**

-   **Player Salary Insights**

    -   How does the percentage of salary cap each player earns correlate with their performance metrics (e.g., batting average, home runs, WAR)?

    -   What is the distribution of salaries across different positions (pitcher, catcher, etc.) for the Yankees compared to other teams?

-   **Team-Level Analysis**

    -   How does the Yankees' average player salary compare to that of other MLB teams?

    -   What percentage of the Yankees' salary cap is spent on top-performing players compared to the league average?

-   **Historical Trends**

    -   How has the percentage of the salary cap allocated to top-paid players changed over the years for the Yankees and other teams?

    -   Are there trends in salary allocation related to team performance in playoffs or championships?

-   **Position-Based Analysis**

    -   Are certain positions (e.g., pitchers, shortstops) allocated a higher percentage of the salary cap across MLB teams? How does this compare with the Yankees?

    -   Do players in specific positions receive more or less than their performance justifies?

-   **Team Strategy Insights**

    -   Does a higher percentage of salary cap spent on star players correlate with better overall team performance?

    -   How do the Yankees' salary allocation strategies compare to teams with similar or better performance records?

-   **League-Wide Comparisons**

    -   How do the Yankees rank in terms of salary cap utilization efficiency compared to other MLB teams?

    -   Are there any anomalies or outliers in salary allocations across the league?

-   **Contract Lengths and Salaries**

    -   Do longer contracts for Yankees players correlate with a higher percentage of the salary cap allocation?

    -   How does contract length influence the perceived value of players?

-   **Demographics and Salaries**

    -   Are there correlations between player age, experience, or nationality and the percentage of the salary cap they receive?

    -   How do rookie salaries as a percentage of salary caps compare between the Yankees and other teams?

-   **Revenue vs. Salaries**

    -   Does the Yankees' revenue have a stronger correlation with salary cap allocations compared to other teams?

    -   How does team revenue impact the overall spending strategy on players?
